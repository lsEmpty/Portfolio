{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"modal-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"input\", {\n    type: \"text\",\n    ref: \"searcher\",\n    class: \"searcher\",\n    id: \"searcher\",\n    placeholder: \"Search\",\n    autocomplete: \"off\",\n    autocorrect: \"off\",\n    spellcheck: \"false\",\n    onInput: _cache[0] || (_cache[0] = (...args) => $options.onSearch && $options.onSearch(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n    class: \"content\",\n    id: \"content\"\n  }, null, -1 /* HOISTED */)), _cache[2] || (_cache[2] = _createElementVNode(\"footer\", {\n    class: \"modal-content-footer\"\n  }, [_createElementVNode(\"i\", {\n    class: \"bi bi-arrow-up-short\"\n  }), _createElementVNode(\"i\", {\n    class: \"bi bi-arrow-down-short\"\n  }), _createElementVNode(\"p\", null, \"to scroll in the navigation terminal\")], -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","type","ref","id","placeholder","autocomplete","autocorrect","spellcheck","onInput","_cache","args","$options","onSearch"],"sources":["C:\\Users\\danid\\Portfolio\\src\\components\\modal-content.vue"],"sourcesContent":["<template>\r\n    <div class=modal-content>\r\n        <input type=\"text\" ref=\"searcher\" class=\"searcher\" id=\"searcher\" placeholder=\"Search\" autocomplete=\"off\"\r\n            autocorrect=\"off\" spellcheck=\"false\" @input=\"onSearch\">\r\n        <div class=\"content\" id=\"content\">\r\n\r\n        </div>\r\n        <footer class=\"modal-content-footer\">\r\n            <i class=\"bi bi-arrow-up-short\"></i>\r\n            <i class=\"bi bi-arrow-down-short\"></i>\r\n            <p>to scroll in the navigation terminal</p>\r\n        </footer>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'ModalContentComponent',\r\n    methods: {\r\n        onSearch() {\r\n            const text_search = this.$refs.searcher.value; // Toma el valor del searcher\r\n            this.searchText = []; // Elimina todos los items buscados anteriormente\r\n            let CommandItems = this.pushSearchText(this.CommandItems, text_search); // Retorna la cantidad de items que coinciden de CommandItems\r\n            let ExtraItems = this.pushSearchTextEspecificImages(this.ExtraItems, text_search); // Retorna una lista con la posicion de cada ExtraItem que coincidió en la funcion\r\n\r\n            // Toma el div en donde se va a colocar todo lo buscado\r\n            const contenido = document.getElementById('content');\r\n            // Remueve todos los elementos anteriormente colocados\r\n            this.removeAppendChild(this.lastAppendChild, contenido);\r\n            this.lastAppendChild = []; // Limpia el ultimo AppendChild ya que se rellenará nuevamente\r\n            let contador = 0; // Contador para los CommandsItems\r\n            let contadorExtraImages = -1; // Contador para los ExtraImages\r\n            // Condicion para colocar el titulo de los CommandItems\r\n            if (CommandItems != 0) {\r\n                let tituloTerminal = document.createElement(\"p\");\r\n                tituloTerminal.className = \"titulo\";\r\n                tituloTerminal.textContent = \"Terminal Commands\";\r\n                contenido.appendChild(tituloTerminal);\r\n                this.lastAppendChild.push(tituloTerminal);\r\n            }\r\n            // ForEach para recorrer los items que se van a colocar\r\n            this.searchText.forEach(element => {\r\n                // Crea un div para cada item que se va a colocar\r\n                const div_contenido = document.createElement('div');\r\n                // Cada que se itera el searchText se ejecutará esto en el primer item para darle un pointToDiv\r\n                if (contador == 0) {\r\n                    this.lastPointToDiv = div_contenido;\r\n                    div_contenido.style.borderLeft = \"2px solid #00BCF4\";\r\n                }\r\n                // EventListener para colocar el pointToDiv cuando se pase el mouse por el item\r\n                div_contenido.addEventListener('mouseover', this.pointToDiv);\r\n                let icon = \"\";\r\n                contador++;\r\n                // La funcion principal de esta condicion es colocar el icono que se a a colocar al item\r\n                if (contador <= CommandItems) {\r\n                    icon = `<i class=\"bi bi-terminal\"></i>`;\r\n                } else {\r\n                    // Condicional que colocará el titulo de los ExtraItems\r\n                    if (contadorExtraImages == -1) {\r\n                        let tituloExtra = document.createElement(\"p\");\r\n                        tituloExtra.className = \"titulo\";\r\n                        tituloExtra.textContent = \"Extra\";\r\n                        contenido.appendChild(tituloExtra);\r\n                        this.lastAppendChild.push(tituloExtra);\r\n                    }\r\n                    contadorExtraImages++;\r\n                    icon = this.ImagesExtraItems[ExtraItems[contadorExtraImages]];\r\n                    // A cada item extra le asigna su indice a la id para despues ser tratada en handleClickExtraItems\r\n                    div_contenido.id = ExtraItems[contadorExtraImages];\r\n                    div_contenido.className = \"custom-links\";\r\n                    // EventListener para la redireccion al hacer click en el extra item\r\n                    div_contenido.addEventListener('click', this.handleClickExtraItems);\r\n                }\r\n                // InnerHTML para colocar el elemento y el icono respectivo\r\n                div_contenido.innerHTML = `\r\n                    ${icon}\r\n                    <p class=\"item\">${element}</p>\r\n                `;\r\n                // Agrega el appendChild de cada item y los añade al ultimo AppendChild\r\n                this.lastAppendChild.push(div_contenido);\r\n                contenido.appendChild(div_contenido);\r\n            });\r\n            // En caso de que no hayan coincidencias se ejecutará esta condicion\r\n            if (this.searchText.length == 0) {\r\n                const div_contenido = document.createElement('div');\r\n                div_contenido.innerHTML = `\r\n                    <p>No matches found</p>\r\n                `\r\n                this.lastAppendChild.push(div_contenido);\r\n                contenido.appendChild(div_contenido);\r\n            }\r\n        },\r\n        removeAppendChild(elements, contenido) { // Remueve los ultimos appendChild\r\n            // Tomando los elementos que va a eliminar y de donde los va a remover\r\n            elements.forEach(element => {\r\n                contenido.removeChild(element);\r\n            });\r\n        },\r\n        pushSearchText(list, text_search) { // Rellena el searchText con las coincidencias que encontró\r\n            // Recibe la lista que tienen los elementos que serán comparados para filtrar\r\n            // Recibe el texto que se verá si coincide con cada uno de los items\r\n            let contador = 0;\r\n            list.forEach(item => {\r\n                if (item.toLowerCase().includes(text_search.toLowerCase())) {\r\n                    this.searchText.push(item);\r\n                    contador++;\r\n                }\r\n            });\r\n            // Retorna la cantidad de items que coincidieron con el texto\r\n            return contador;\r\n        },\r\n        pushSearchTextEspecificImages(list, text_search) { // Realiza la misma funcion del pushSearchText cambiando el retorno\r\n            let indices = [];\r\n            let contador = -1;\r\n            list.forEach(item => {\r\n                contador++;\r\n                if (item.toLowerCase().includes(text_search.toLowerCase())) {\r\n                    this.searchText.push(item);\r\n                    indices.push(contador);\r\n                }\r\n            });\r\n            // Retorna los indices de los extra items\r\n            return indices;\r\n        },\r\n        pointToDiv(event) { // Cuando pase el mouse por el item se colocarán estos estilos\r\n            this.lastPointToDiv.style.borderLeft = \"solid 2px transparent\";\r\n            event.currentTarget.style.borderLeft = \"2px solid #00BCF4\";\r\n            this.lastPointToDiv = event.currentTarget;\r\n        },\r\n        handleClickExtraItems(event) { // Cuando se clickee algún extra item me enviará a la url utilizando la id que tiene el indice de las url's\r\n            window.open(this.LinksExtraItems[event.currentTarget.id]);\r\n        }\r\n    },\r\n    mounted() {\r\n        this.$refs.searcher.focus();\r\n        this.onSearch();\r\n    },\r\n    data() {\r\n        return {\r\n            lastPointToDiv: \"\",\r\n            lastAppendChild: [],\r\n            searchText: [],\r\n            CommandItems: [\"Navegator : Sends you to the navegation terminal\", \"Discord : Show the user of discord\", \"Exit : Close the terminal\", \"Clear : Clear the terminal\"],\r\n            ImagesExtraItems: [`<i class=\"bi bi-youtube custom-links\"></i>`, `<i class=\"bi bi-instagram custom-links\"></i>`, `<i class=\"bi bi-github custom-links\"></i>`],\r\n            LinksExtraItems: [`https://www.youtube.com/@Formateado`, `https://www.instagram.com/jeloudab/`, `https://github.com/iHonguito`],\r\n            ExtraItems: [\"YouTube\", \"Instagram\", \"GitHub\"]\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.modal-content {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: \"Playpen Sans\", cursive;\r\n    background-color: #326C78;\r\n    color: #00BCF4;\r\n    border-radius: 5px;\r\n}\r\n\r\n.searcher::placeholder {\r\n    color: #00BCF480;\r\n}\r\n\r\n.searcher {\r\n    width: 100%;\r\n    padding: 12px;\r\n    outline: none;\r\n    border: none;\r\n    border-radius: 10px;\r\n    background-color: #326C78;\r\n    color: #00BCF4;\r\n}\r\n\r\n.bi-arrow-up-short,\r\n.bi-arrow-down-short,\r\n.bi-arrow-return-left {\r\n    font-size: 0;\r\n}\r\n\r\n.bi-arrow-up-short::before,\r\n.bi-arrow-down-short::before {\r\n    background-color: #00BCF480;\r\n    font-size: 25px;\r\n    border-radius: 3px;\r\n    margin: 0px 3px;\r\n}\r\n\r\n.modal-content-footer {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 5px 0px;\r\n}\r\n\r\n.modal-content-footer p {\r\n    margin: 0;\r\n    margin-left: 5px;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.content {\r\n    border-top: solid 2px #306874;\r\n    border-bottom: solid 2px #306874;\r\n    max-height: 250px;\r\n    overflow-y: auto;\r\n}\r\n\r\n.content div {\r\n    padding: 6px 0px 6px 10px;\r\n    font-size: 15px;\r\n    border-left: solid 2px transparent;\r\n}\r\n\r\n.titulo {\r\n    margin: 0;\r\n    font-size: 12.5px;\r\n    padding: 4px 0px 4px 12px;\r\n    color: #02a9db;\r\n}\r\n\r\n.custom-links:hover {\r\n    cursor: pointer;\r\n}\r\n\r\n.content div p {\r\n    display: inline;\r\n}\r\n\r\n\r\n/* Estilos para el scrollbar en WebKit */\r\n.content::-webkit-scrollbar {\r\n    width: 12px;\r\n}\r\n\r\n.content::-webkit-scrollbar-track {\r\n    background: #326C78;\r\n}\r\n\r\n.content::-webkit-scrollbar-thumb {\r\n    background: #00BCF4;\r\n}\r\n\r\n.content::-webkit-scrollbar-thumb:hover {\r\n    background: #02a9db;\r\n}\r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAa;;uBAAxBC,mBAAA,CAWM,OAXNC,UAWM,GAVFC,mBAAA,CAC2D;IADpDC,IAAI,EAAC,MAAM;IAACC,GAAG,EAAC,UAAU;IAACL,KAAK,EAAC,UAAU;IAACM,EAAE,EAAC,UAAU;IAACC,WAAW,EAAC,QAAQ;IAACC,YAAY,EAAC,KAAK;IACpGC,WAAW,EAAC,KAAK;IAACC,UAAU,EAAC,OAAO;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;4EACzDV,mBAAA,CAEM;IAFDH,KAAK,EAAC,SAAS;IAACM,EAAE,EAAC;yDAGxBH,mBAAA,CAIS;IAJDH,KAAK,EAAC;EAAsB,IAChCG,mBAAA,CAAoC;IAAjCH,KAAK,EAAC;EAAsB,IAC/BG,mBAAA,CAAsC;IAAnCH,KAAK,EAAC;EAAwB,IACjCG,mBAAA,CAA2C,WAAxC,sCAAoC,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}