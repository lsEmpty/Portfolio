{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'CommandsComponent',\n  data() {\n    return {\n      input: '> ',\n      output: []\n    };\n  },\n  methods: {\n    focusInput() {\n      this.$refs.inputField.focus(); // Enfoca el textarea al hacer clic en la consola\n    },\n    executeCommand(event) {\n      const command = this.input.trim().substring(2);\n      event.preventDefault();\n      if (command != '') {\n        this.input = '> ';\n        this.output.push(`<span style=\"color: #853693;\">></span><span style=\"color: #fdff90;\"> ${command}</span>`);\n        const terminal = document.getElementById('terminal');\n        terminal.style.overflowY = 'auto';\n        this.commands(command.toLowerCase(), terminal);\n        this.$nextTick(() => {\n          const inputField = this.$refs.inputField;\n          if (inputField) {\n            const terminal = inputField.parentElement;\n            terminal.scrollTop = terminal.scrollHeight;\n          }\n        });\n      }\n    },\n    adjustHeight() {\n      const textarea = this.$refs.inputField;\n      textarea.style.height = 'auto'; // Restablece la altura\n      textarea.style.height = `${textarea.scrollHeight}px`; // Ajusta la altura al contenido\n      if (this.input.length > 200) {\n        textarea.value = this.input.substring(0, 200);\n      }\n    },\n    handleEvent(event) {\n      const textarea = this.$refs.inputField;\n      // Evita que el usuario borre el símbolo \">\"\n      if (this.input.length <= 2 && event.key === 'Backspace') {\n        event.preventDefault(); // Previene la acción de borrar\n      } else if (textarea.value.length === 2 && event.key === ' ') {\n        // Evita que el usuario pueda colocar espacios antes de colocar algún caracter\n        event.preventDefault();\n      } else {\n        let textAreaLength = textarea.value.length;\n        // Evita que el usuario pueda colocar mas de un espacio\n        if (textarea.value.substring(textAreaLength - 1) === ' ' && event.key === ' ') {\n          event.preventDefault();\n        }\n      }\n    },\n    simulateBackspace() {\n      if (this.input.length > 0) {\n        this.input = this.input.slice(0, -1); // Elimina el último carácter del input\n      }\n    },\n    commands(command, terminal) {\n      switch (command) {\n        case 'discord':\n          this.output.push(`<i class=\"bi bi-discord\" style=\"color: #5865F2;\"></i> <span style=\"color:#5865F2;\">Discord: formateado</span>`);\n          break;\n        case 'clear':\n          terminal.style.overflowY = 'unset';\n          this.output = [];\n          break;\n        case 'cls':\n          terminal.style.overflowY = 'unset';\n          this.output = [];\n          break;\n        case 'navegator':\n          this.$emit('NavegatorTerminal', true, false);\n          break;\n        case 'exit':\n          this.$emit('ExitTerminal', false);\n          break;\n        default:\n          this.errorCommand(command);\n          break;\n      }\n    },\n    // Methods defined in the \n    errorCommand(command) {\n      let words = command.split('');\n      let initCommand = \"\";\n      let flag = true;\n      words.forEach(element => {\n        if (element != ' ' && flag) {\n          initCommand += element;\n        } else {\n          flag = false;\n        }\n      });\n      this.output.push(`<span style=\"color:#E96A5E;\">${initCommand}: The term '${initCommand}' is not recognized as the name of an executable function.<br>Check the spelling of the name and try again.</span>`);\n    }\n  }\n};","map":{"version":3,"names":["name","data","input","output","methods","focusInput","$refs","inputField","focus","executeCommand","event","command","trim","substring","preventDefault","push","terminal","document","getElementById","style","overflowY","commands","toLowerCase","$nextTick","parentElement","scrollTop","scrollHeight","adjustHeight","textarea","height","length","value","handleEvent","key","textAreaLength","simulateBackspace","slice","$emit","errorCommand","words","split","initCommand","flag","forEach","element"],"sources":["C:\\Users\\danid\\Portfolio\\src\\components\\commands.vue"],"sourcesContent":["<template>\r\n    <div class=\"terminal\" id=\"terminal\" @click=\"focusInput\">\r\n        <div v-for=\"(line, index) in output\" :key=\"index\" v-html=\"line\" class=\"contenido\"></div>\r\n        <span style=\"color: #8f3f38;\" class=\"contenido\">danid</span> <span style=\"color: #2d4663;\"\r\n            class=\"contenido\">~\\Desktop\\Portfolio</span>\r\n        <textarea v-model=\"input\" @keydown.enter=\"executeCommand\" ref=\"inputField\" class=\"input\" rows=\"1\"\r\n            @input=\"adjustHeight\" @keydown=\"handleEvent\"></textarea>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'CommandsComponent',\r\n    data() {\r\n        return {\r\n            input: '> ',\r\n            output: []\r\n        }\r\n    },\r\n    methods: {\r\n        focusInput() {\r\n            this.$refs.inputField.focus(); // Enfoca el textarea al hacer clic en la consola\r\n        },\r\n        executeCommand(event) {\r\n            const command = this.input.trim().substring(2);\r\n            event.preventDefault();\r\n            if (command != '') {\r\n                this.input = '> ';\r\n                this.output.push(`<span style=\"color: #853693;\">></span><span style=\"color: #fdff90;\"> ${command}</span>`);\r\n                const terminal = document.getElementById('terminal');\r\n                terminal.style.overflowY = 'auto';\r\n                this.commands(command.toLowerCase(), terminal);\r\n                this.$nextTick(() => {\r\n                    const inputField = this.$refs.inputField;\r\n                    if (inputField) {\r\n                        const terminal = inputField.parentElement;\r\n                        terminal.scrollTop = terminal.scrollHeight;\r\n                    }\r\n                });\r\n            }\r\n        }, adjustHeight() {\r\n            const textarea = this.$refs.inputField;\r\n            textarea.style.height = 'auto'; // Restablece la altura\r\n            textarea.style.height = `${textarea.scrollHeight}px`; // Ajusta la altura al contenido\r\n            if (this.input.length > 200) {\r\n                textarea.value = this.input.substring(0, 200);\r\n            }\r\n        },\r\n        handleEvent(event) {\r\n            const textarea = this.$refs.inputField;\r\n            // Evita que el usuario borre el símbolo \">\"\r\n            if (this.input.length <= 2 && event.key === 'Backspace') {\r\n                event.preventDefault(); // Previene la acción de borrar\r\n            } else if (textarea.value.length === 2 && event.key === ' ') { // Evita que el usuario pueda colocar espacios antes de colocar algún caracter\r\n                event.preventDefault();\r\n            } else {\r\n                let textAreaLength = textarea.value.length;\r\n                // Evita que el usuario pueda colocar mas de un espacio\r\n                if (textarea.value.substring(textAreaLength - 1) === ' ' && event.key === ' ') {\r\n                    event.preventDefault()\r\n                }\r\n            }\r\n\r\n        },\r\n        simulateBackspace() {\r\n            if (this.input.length > 0) {\r\n                this.input = this.input.slice(0, -1); // Elimina el último carácter del input\r\n            }\r\n        },\r\n        commands(command, terminal) {\r\n            switch (command) {\r\n                case 'discord':\r\n                    this.output.push(`<i class=\"bi bi-discord\" style=\"color: #5865F2;\"></i> <span style=\"color:#5865F2;\">Discord: formateado</span>`);\r\n                    break;\r\n                case 'clear':\r\n                    terminal.style.overflowY = 'unset';\r\n                    this.output = [];\r\n                    break;\r\n                case 'cls':\r\n                    terminal.style.overflowY = 'unset';\r\n                    this.output = [];\r\n                    break;\r\n                case 'navegator':\r\n                    this.$emit('NavegatorTerminal', true, false);\r\n                    break;\r\n                case 'exit':\r\n                    this.$emit('ExitTerminal', false);\r\n                    break;\r\n                default:\r\n                    this.errorCommand(command);\r\n                    break;\r\n            }\r\n        },\r\n        // Methods defined in the \r\n        errorCommand(command) {\r\n            let words = command.split('');\r\n            let initCommand = \"\";\r\n            let flag = true;\r\n            words.forEach(element => {\r\n                if (element != ' ' && flag) {\r\n                    initCommand += element;\r\n                } else {\r\n                    flag = false;\r\n                }\r\n            });\r\n            this.output.push(`<span style=\"color:#E96A5E;\">${initCommand}: The term '${initCommand}' is not recognized as the name of an executable function.<br>Check the spelling of the name and try again.</span>`);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.contenido {\r\n    font-family: \"Playpen Sans\", cursive;\r\n    font-size: 17px;\r\n    font-optical-sizing: auto;\r\n\r\n    /**/\r\n    word-wrap: break-word;\r\n    /* Permite que las palabras largas se rompan */\r\n    white-space: pre-wrap;\r\n    /* Mantiene los espacios y saltos de línea */\r\n}\r\n\r\n.terminal {\r\n    height: 70vh;\r\n    border-radius: 0 0 10px 10px;\r\n    background-color: #1C2639;\r\n    padding: 10px 10px 0 10px;\r\n}\r\n\r\n.input {\r\n    width: 100%;\r\n    border: none;\r\n    outline: none;\r\n    color: #fdff90;\r\n    background: transparent;\r\n    resize: none;\r\n    font-family: \"Playpen Sans\", cursive;\r\n    font-size: 17px;\r\n    font-optical-sizing: auto;\r\n}\r\n\r\n/* Estilos para el scrollbar en WebKit */\r\n.terminal::-webkit-scrollbar {\r\n    width: 0px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}