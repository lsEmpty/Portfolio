{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Transition as _Transition, withCtx as _withCtx, createElementVNode as _createElementVNode, createBlock as _createBlock } from \"vue\";\nimport _imports_0 from '@/assets/terminal.png';\nconst _hoisted_1 = {\n  class: \"all-content\"\n};\nconst _hoisted_2 = {\n  class: \"terminal\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"terminal\"\n};\nconst _hoisted_4 = {\n  class: \"profile-items\",\n  ref: \"SecondarySection\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TerminalComponent = _resolveComponent(\"TerminalComponent\");\n  const _component_RedirectMessage = _resolveComponent(\"RedirectMessage\");\n  const _component_BiographyComponent = _resolveComponent(\"BiographyComponent\");\n  const _component_SpecialtiesComponent = _resolveComponent(\"SpecialtiesComponent\");\n  const _component_ProjectsComponent = _resolveComponent(\"ProjectsComponent\");\n  const _component_ButtonUpComponent = _resolveComponent(\"ButtonUpComponent\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"terminal-content-show\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.focusTerminal && $options.focusTerminal(...args)),\n    ref: \"PrincipalSection\"\n  }, [_createElementVNode(\"div\", _hoisted_2, [$data.showImage ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: _imports_0,\n    alt: \"Show\",\n    class: \"terminal-image\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.ShowTerminal && $options.ShowTerminal(...args))\n  })) : _createCommentVNode(\"\", true), _createVNode(_Transition, {\n    name: \"fade\",\n    onBeforeEnter: $options.beforeEnter,\n    onEnter: $options.enter,\n    onLeave: $options.leave\n  }, {\n    default: _withCtx(() => [$data.showTerminal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_TerminalComponent, {\n      inProfileComponent: $data.inProfileComponent,\n      onCloseTerminal: $options.closeTerminal,\n      onShowItemProfile: $options.showItemProfile,\n      ref: \"terminal\"\n    }, null, 8, [\"inProfileComponent\", \"onCloseTerminal\", \"onShowItemProfile\"])])) : _createCommentVNode(\"\", true)]),\n    _: 1\n  }, 8, [\"onBeforeEnter\", \"onEnter\", \"onLeave\"])]), _createVNode(_Transition, {\n    name: \"fade\",\n    onBeforeEnter: $options.beforeEnter,\n    onEnter: $options.enter,\n    onLeave: $options.leave\n  }, {\n    default: _withCtx(() => [$data.showGuieMessage ? (_openBlock(), _createBlock(_component_RedirectMessage, {\n      key: 0\n    })) : _createCommentVNode(\"\", true)]),\n    _: 1\n  }, 8, [\"onBeforeEnter\", \"onEnter\", \"onLeave\"])], 512), _createElementVNode(\"div\", _hoisted_4, [$data.showProfileComponents[0] ? (_openBlock(), _createBlock(_component_BiographyComponent, {\n    key: 0\n  })) : _createCommentVNode(\"\", true), $data.showProfileComponents[1] ? (_openBlock(), _createBlock(_component_SpecialtiesComponent, {\n    key: 1\n  })) : _createCommentVNode(\"\", true), $data.showProfileComponents[2] ? (_openBlock(), _createBlock(_component_ProjectsComponent, {\n    key: 2\n  })) : _createCommentVNode(\"\", true), _createVNode(_Transition, {\n    name: \"fade\",\n    onBeforeEnter: $options.beforeEnter,\n    onEnter: $options.enter,\n    onLeave: $options.leave\n  }, {\n    default: _withCtx(() => [$data.inProfileComponent ? (_openBlock(), _createBlock(_component_ButtonUpComponent, {\n      key: 0,\n      onClickButtonUp: $options.SectionsScroll\n    }, null, 8, [\"onClickButtonUp\"])) : _createCommentVNode(\"\", true)]),\n    _: 1\n  }, 8, [\"onBeforeEnter\", \"onEnter\", \"onLeave\"])], 512)]);\n}","map":{"version":3,"names":["_imports_0","class","key","ref","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","args","$options","focusTerminal","_hoisted_2","$data","showImage","src","alt","ShowTerminal","_createCommentVNode","_createVNode","_Transition","name","onBeforeEnter","beforeEnter","onEnter","enter","onLeave","leave","default","_withCtx","showTerminal","_hoisted_3","_component_TerminalComponent","inProfileComponent","onCloseTerminal","closeTerminal","onShowItemProfile","showItemProfile","_","showGuieMessage","_createBlock","_component_RedirectMessage","_hoisted_4","showProfileComponents","_component_BiographyComponent","_component_SpecialtiesComponent","_component_ProjectsComponent","_component_ButtonUpComponent","onClickButtonUp","SectionsScroll"],"sources":["C:\\Users\\danid\\Portfolio\\src\\views\\PrincipalPage.vue"],"sourcesContent":["<template>\r\n    <!-- Div que contiene toda el contenido -->\r\n    <div class=\"all-content\">\r\n        <!-- Div que muestra el contenido del a section terminal -->\r\n        <div class=\"terminal-content-show\" @click=\"focusTerminal\" ref=\"PrincipalSection\">\r\n            <!-- Div que muestra el contenido de la terminal sea el Button Terminal o la Terminal -->\r\n            <div class=\"terminal\">\r\n                <img v-if=\"showImage\" src=\"@/assets/terminal.png\" alt=\"Show\" class=\"terminal-image\"\r\n                    @click=\"ShowTerminal\">\r\n                <transition name=\"fade\" @before-enter=\"beforeEnter\" @enter=\"enter\" @leave=\"leave\">\r\n                    <div v-if=\"showTerminal\" class=\"terminal\">\r\n                        <TerminalComponent :inProfileComponent=\"inProfileComponent\" @closeTerminal=\"closeTerminal\"\r\n                            @showItemProfile=\"showItemProfile\" ref=\"terminal\">\r\n                        </TerminalComponent>\r\n                    </div>\r\n                </transition>\r\n            </div>\r\n            <!-- Componente que mostrará un mensaje de guia -->\r\n            <transition name=\"fade\" @before-enter=\"beforeEnter\" @enter=\"enter\" @leave=\"leave\">\r\n                <RedirectMessage v-if=\"showGuieMessage\"></RedirectMessage>\r\n            </transition>\r\n        </div>\r\n        <!-- Div que mostrará cada una de los profile items -->\r\n        <div class=\"profile-items\" ref=\"SecondarySection\">\r\n            <BiographyComponent v-if=\"showProfileComponents[0]\"></BiographyComponent>\r\n            <SpecialtiesComponent v-if=\"showProfileComponents[1]\"></SpecialtiesComponent>\r\n            <ProjectsComponent v-if=\"showProfileComponents[2]\"></ProjectsComponent>\r\n            <transition name=\"fade\" @before-enter=\"beforeEnter\" @enter=\"enter\" @leave=\"leave\">\r\n                <ButtonUpComponent v-if=\"inProfileComponent\" @clickButtonUp=\"SectionsScroll\"></ButtonUpComponent>\r\n            </transition>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n/* Terminal Components */\r\nimport TerminalComponent from \"@/components/terminal.vue\"\r\nimport RedirectMessage from \"@/components/guie-message.vue\";\r\n\r\n/* Profile components */\r\nimport BiographyComponent from \"@/components/components-profile/biography.vue\";\r\nimport SpecialtiesComponent from \"@/components/components-profile/specialties.vue\";\r\nimport ProjectsComponent from \"@/components/components-profile/projects.vue\";\r\n\r\n/* Button Profile Components*/\r\nimport ButtonUpComponent from \"@/components/components-profile/button-up.vue\";\r\n\r\nexport default {\r\n    name: 'PrincipalPageView',\r\n    data() {\r\n        return {\r\n            showImage: false, //Dependiendo de esta variable se mostrará o no el botón para abrir la terminal\r\n            showTerminal: false, //Dependiendo de esta variable se mostrará o no la terminal\r\n            inProfileComponent: false, //Variable que estará en true si se está en un profile component, en caso de presionar el ButtonUp para subir a la terminal se colocará en false\r\n            section: 'secondary', //Variable que cambiará si se presiona el ButtonUp para subir a la terminal, en caso de ser presionado cambiará a 'principal'\r\n            showProfileComponents: [false, false, false], //Lista que cambiará cada profile según el indice que se seleccione en el nav terminal\r\n            showGuieMessage: false, //Dependiendo de esta variable se mostrará o no el GuieMessage\r\n        }\r\n    },\r\n    methods: {\r\n        // Function que muestra el componente de ImageTerminal para el botón\r\n        ShowImageTerminal: function () {\r\n            this.showImage = true;\r\n        },\r\n        // Function que muestra el componente de la terminal\r\n        ShowTerminal: function () {\r\n            this.showImage = false;\r\n            this.showTerminal = true;\r\n            this.showGuieMessage = true;\r\n        },\r\n        // Function que recibe un $emit, se cierra la terminal y se cierran todos los ProfileComponents\r\n        closeTerminal(value) {\r\n            if (!value) {\r\n                this.showTerminal = false;\r\n                this.showProfileComponents = [false, false, false];\r\n            }\r\n        },\r\n        // Function que hace focus a la terminal tomando la ref y haciendo el focus\r\n        focusTerminal() {\r\n            if (this.showTerminal) {\r\n                this.$refs.terminal.focusNavTerminal();\r\n            }\r\n        },\r\n        removeFocusTerminal() {\r\n            this.$refs.terminal.removeFocusNavTerminal();\r\n        },\r\n        // Before, Enter and Leave are to the animations \r\n        beforeEnter(el) {\r\n            el.style.opacity = 0;\r\n        },\r\n        enter(el, done) {\r\n            // Para asegurar que el modal esté visible antes de hacer la transición\r\n            el.offsetHeight; // Trigger a reflow\r\n            el.style.transition = 'opacity 0.3s ease';\r\n            el.style.opacity = 1;\r\n            done();\r\n        },\r\n        leave(el, done) {\r\n            el.style.transition = 'opacity 0.3s ease';\r\n            el.style.opacity = 0;\r\n            setTimeout(() => {\r\n                done();\r\n                if (!this.showTerminal) {\r\n                    this.showImage = true;\r\n                }\r\n            }, 300); // El tiempo debe coincidir con la duración de la transición\r\n        },\r\n        // Function que muestra el Profile según lo que mandé el el componente de nav terminal\r\n        showItemProfile(values) {\r\n            // Recibe el componente la lista con el indice que se accionó y se pasa ese valor a showProfileComponent para mostrar el que se seleccionó\r\n            this.showProfileComponents = values;\r\n        },\r\n        // Funcction que se ejecutá cuando se acciona el botón de ButtonUp y cuando hay alguna update en la funcion verifyShowProfile\r\n        SectionsScroll(section) {\r\n            // En caso de ser secondary significa que se accionó algún item de nav-terminal\r\n            if (section == 'secondary') {\r\n                // Scroll down\r\n                this.ScrollToComponent(\"SecondarySection\");\r\n                this.showGuieMessage = false;\r\n                this.inProfileComponent = true; // Como se encuentra en un ProfileComponent se asigna a true\r\n            } else if (section == 'principal') { // Se acciona cuando se ejecuta el botón de ButtonUp\r\n                // Scroll up\r\n                this.section = section;\r\n                this.ScrollToComponent(\"PrincipalSection\");\r\n                this.section = 'secondary';\r\n                this.showGuieMessage = true;\r\n                this.inProfileComponent = false; // Como se encuentra en la section de la terminal inProfileComponent pasa a ser falso\r\n            }\r\n        },\r\n        ScrollToComponent(ref) {\r\n            this.$refs[ref].scrollIntoView({\r\n                behavior: \"smooth\", // Scroll suave\r\n                block: \"start\", // Alinea al inicio del componente\r\n            });\r\n            // Toma el contenido de la variable antes de comenzar el timeout\r\n            let section = this.section;\r\n            setTimeout(() => {\r\n                // En caso de que se haya presionado el botón de ButtonUp se hará focus a la navegator terminal\r\n                if (section == 'principal') {\r\n                    this.focusTerminal();\r\n                }\r\n            }, 500);\r\n        },\r\n        // Function que verificará si se va a redireccionar para un ProfileComponent\r\n        verifyShowProfile() {\r\n            let acumulador = 0;\r\n            this.showProfileComponents.forEach(value => {\r\n                if (value == false) {\r\n                    acumulador++;\r\n                }\r\n            });\r\n            // Esta condicional se coloca para evitar un error del updated ya que se ejecuta de forma indeceada, \r\n            // es para verificar que se haya seleccionado algún item de nav-terminal \r\n            if (acumulador != 3 && this.section == 'secondary') {\r\n                // Cuando se encuentre en un Prifile Item se removerá el focus que tiene el nav-terminal para no poder modificar la terminal desde ahí\r\n                this.removeFocusTerminal()\r\n                this.SectionsScroll(this.section);\r\n            }\r\n\r\n            // En caso de que no se muestre la terminal retirar el mensaje de guia Ctrl + M\r\n            if (!this.showTerminal) {\r\n                this.showGuieMessage = false;\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        this.ShowImageTerminal();\r\n    },\r\n    components: {\r\n        TerminalComponent,\r\n        RedirectMessage,\r\n        BiographyComponent,\r\n        SpecialtiesComponent,\r\n        ProjectsComponent,\r\n        ButtonUpComponent\r\n    },\r\n    updated() {\r\n        // Cada vez que se haga un updated se ejecutará todo lo que está acá dentro\r\n        this.verifyShowProfile();\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.terminal-content-show {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n}\r\n\r\n.terminal-image {\r\n    margin-top: -30px;\r\n    height: 80px;\r\n    cursor: pointer;\r\n    transition: transform 0.2s ease;\r\n}\r\n\r\n.terminal-image:hover {\r\n    transform: scale(1.05);\r\n}\r\n\r\n.terminal-image:active {\r\n    transform: scale(1.00);\r\n}\r\n\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n    transition: opacity 0.5s ease-in-out;\r\n    /* Ajusta el tiempo aquí */\r\n}\r\n\r\n.fade-enter,\r\n.fade-leave-to\r\n\r\n/* .fade-leave-active in versions <2.1.8 */\r\n    {\r\n    opacity: 0;\r\n}\r\n</style>"],"mappings":";OAOsCA,UAA2B;;EALxDC,KAAK,EAAC;AAAa;;EAIXA,KAAK,EAAC;AAAU;;EANjCC,GAAA;EAU6CD,KAAK,EAAC;;;EAatCA,KAAK,EAAC,eAAe;EAACE,GAAG,EAAC;;;;;;;;;uBArBnCC,mBAAA,CA6BM,OA7BNC,UA6BM,GA3BFC,mBAAA,CAiBM;IAjBDL,KAAK,EAAC,uBAAuB;IAAEM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;IAAEN,GAAG,EAAC;MAE1DG,mBAAA,CAUM,OAVNM,UAUM,GATSC,KAAA,CAAAC,SAAS,I,cAApBV,mBAAA,CAC0B;IAR1CF,GAAA;IAOsCa,GAA2B,EAA3Bf,UAA2B;IAACgB,GAAG,EAAC,MAAM;IAACf,KAAK,EAAC,gBAAgB;IAC9EM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAO,YAAA,IAAAP,QAAA,CAAAO,YAAA,IAAAR,IAAA,CAAY;QARxCS,mBAAA,YASgBC,YAAA,CAMaC,WAAA;IANDC,IAAI,EAAC,MAAM;IAAEC,aAAY,EAAEZ,QAAA,CAAAa,WAAW;IAAGC,OAAK,EAAEd,QAAA,CAAAe,KAAK;IAAGC,OAAK,EAAEhB,QAAA,CAAAiB;;IAT3FC,OAAA,EAAAC,QAAA,CAUoB,MAIM,CAJKhB,KAAA,CAAAiB,YAAY,I,cAAvB1B,mBAAA,CAIM,OAJN2B,UAIM,GAHFZ,YAAA,CAEoBa,4BAAA;MAFAC,kBAAkB,EAAEpB,KAAA,CAAAoB,kBAAkB;MAAGC,eAAa,EAAExB,QAAA,CAAAyB,aAAa;MACpFC,iBAAe,EAAE1B,QAAA,CAAA2B,eAAe;MAAElC,GAAG,EAAC;qFAZnEe,mBAAA,W;IAAAoB,CAAA;oDAkBYnB,YAAA,CAEaC,WAAA;IAFDC,IAAI,EAAC,MAAM;IAAEC,aAAY,EAAEZ,QAAA,CAAAa,WAAW;IAAGC,OAAK,EAAEd,QAAA,CAAAe,KAAK;IAAGC,OAAK,EAAEhB,QAAA,CAAAiB;;IAlBvFC,OAAA,EAAAC,QAAA,CAmBgB,MAA0D,CAAnChB,KAAA,CAAA0B,eAAe,I,cAAtCC,YAAA,CAA0DC,0BAAA;MAnB1EvC,GAAA;IAAA,MAAAgB,mBAAA,W;IAAAoB,CAAA;yDAuBQhC,mBAAA,CAOM,OAPNoC,UAOM,GANwB7B,KAAA,CAAA8B,qBAAqB,O,cAA/CH,YAAA,CAAyEI,6BAAA;IAxBrF1C,GAAA;EAAA,MAAAgB,mBAAA,YAyBwCL,KAAA,CAAA8B,qBAAqB,O,cAAjDH,YAAA,CAA6EK,+BAAA;IAzBzF3C,GAAA;EAAA,MAAAgB,mBAAA,YA0BqCL,KAAA,CAAA8B,qBAAqB,O,cAA9CH,YAAA,CAAuEM,4BAAA;IA1BnF5C,GAAA;EAAA,MAAAgB,mBAAA,YA2BYC,YAAA,CAEaC,WAAA;IAFDC,IAAI,EAAC,MAAM;IAAEC,aAAY,EAAEZ,QAAA,CAAAa,WAAW;IAAGC,OAAK,EAAEd,QAAA,CAAAe,KAAK;IAAGC,OAAK,EAAEhB,QAAA,CAAAiB;;IA3BvFC,OAAA,EAAAC,QAAA,CA4BgB,MAAiG,CAAxEhB,KAAA,CAAAoB,kBAAkB,I,cAA3CO,YAAA,CAAiGO,4BAAA;MA5BjH7C,GAAA;MA4B8D8C,eAAa,EAAEtC,QAAA,CAAAuC;wCA5B7E/B,mBAAA,W;IAAAoB,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}